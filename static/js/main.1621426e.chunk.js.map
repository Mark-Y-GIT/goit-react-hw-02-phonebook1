{"version":3,"sources":["App.js","index.js"],"names":["App","state","contacts","testData","filter","name","number","handleInputChange","e","target","value","setState","handleOnSubmit","preventDefault","prevState","id","uuidv4","inputReset","handleFilterChange","currentTarget","this","normalizedFiltr","toLowerCase","filteredList","contact","includes","console","log","onSubmit","type","onChange","pattern","title","required","map","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAMMA,E,4MACJC,MAAQ,CACNC,SAAS,YAAKC,GACdC,OAAQ,GACRC,KAAM,GACNC,OAAQ,I,EAGVC,kBAAoB,SAAAC,GAClB,MAAwBA,EAAEC,OAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,eAAiB,SAAAJ,GACfA,EAAEK,iBACF,EAAKF,UAAS,SAAAG,GACZ,IAAQT,EAAiBS,EAAjBT,KAAMC,EAAWQ,EAAXR,OACd,MAAO,CACLJ,SAAS,GAAD,mBACHY,EAAUZ,UADP,CAEN,CAAEG,KAAMA,EAAMU,GAAIC,cAAUV,OAAQA,SAK1C,EAAKW,c,EAGPC,mBAAqB,SAAAV,GACnB,IAAQE,EAAUF,EAAEW,cAAZT,MACR,EAAKC,SAAS,CAAEP,OAAQM,K,EAG1BO,WAAa,kBAAM,EAAKN,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAErD,WACE,MAA2Cc,KAAKnB,MAAxCC,EAAR,EAAQA,SAAUG,EAAlB,EAAkBA,KAAMD,EAAxB,EAAwBA,OAAQE,EAAhC,EAAgCA,OAC1Be,EAAkBjB,EAAOkB,cACzBC,EAAerB,EAASE,QAAO,SAAAoB,GAAO,OAC1CA,EAAQnB,KAAKiB,cAAcG,SAASJ,MAKtC,OAFAK,QAAQC,IAAIJ,GAGV,gCACE,2CACA,uBAAMK,SAAUR,KAAKR,eAArB,UACE,sCACA,uBACEiB,KAAK,OACLxB,KAAK,OACLK,MAAOL,EACPyB,SAAUV,KAAKb,kBACfwB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAEV,wCACA,uBACEJ,KAAK,MACLxB,KAAK,SACLK,MAAOJ,EACPwB,SAAUV,KAAKb,kBACfwB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,IAGV,uBACA,wBAAQJ,KAAK,SAAb,4BAEF,wCACA,uBACEA,KAAK,OACLxB,KAAK,SACLK,MAAON,EACP0B,SAAUV,KAAKF,qBAEjB,6BACGK,EAAaW,KAAI,SAAAV,GAAO,OACvB,qBAAIT,GAAIS,EAAQT,GAAhB,UACE,+BAAOS,EAAQnB,OADjB,IAC+BmB,EAAQlB,SADdkB,EAAQT,gB,GAjF3BoB,aA2FHnC,IC5FfoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.1621426e.chunk.js","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport testData from './data.json';\nimport { number } from 'prop-types';\n\nclass App extends Component {\n  state = {\n    contacts: [...testData],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n    this.setState(prevState => {\n      const { name, number } = prevState;\n      return {\n        contacts: [\n          ...prevState.contacts,\n          { name: name, id: uuidv4(), number: number },\n        ],\n      };\n    });\n\n    this.inputReset();\n  };\n\n  handleFilterChange = e => {\n    const { value } = e.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  inputReset = () => this.setState({ name: '', number: '' });\n\n  render() {\n    const { contacts, name, filter, number } = this.state;\n    const normalizedFiltr = filter.toLowerCase();\n    const filteredList = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFiltr),\n    );\n\n    console.log(filteredList);\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <form onSubmit={this.handleOnSubmit}>\n          <h2>Name</h2>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n          <h2>Number</h2>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n\n          <br />\n          <button type=\"submit\">Add contact</button>\n        </form>\n        <h2>Filter</h2>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={this.handleFilterChange}\n        />\n        <ul>\n          {filteredList.map(contact => (\n            <li id={contact.id} key={contact.id}>\n              <span>{contact.name}</span> {contact.number}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n//\n\n// contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase());\n\n//  <ul>\n//    {filter.length\n//      ? filteredList.map(contact => (\n//          <li id={contact.id} key={contact.id}>\n//            <span>{contact.name}</span> {contact.number}\n//          </li>\n//        ))\n//      : contacts.map(contact => (\n//          <li id={contact.id} key={contact.id}>\n//            <span>{contact.name}</span> {contact.number}\n//          </li>\n//        ))}\n//  </ul>;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}