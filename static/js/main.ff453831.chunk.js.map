{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleInputChange","e","target","value","setState","handleOnSubmit","preventDefault","props","handleOnFormSubmit","inputReset","this","onSubmit","type","onChange","pattern","title","required","className","Component","Filter","filter","handleFilterChange","ContactList","contacts","deleteContact","map","contact","id","style","marginLeft","onClick","App","testData","getFilteredContacts","normalizedFilter","toLowerCase","includes","currentTarget","data","find","alert","prevState","uuidv4","contactForDelete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff453831.chunk.js","sourcesContent":["import '../../App.css';\nimport { Component } from 'react';\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    this.props.handleOnFormSubmit({ name, number });\n\n    this.inputReset();\n  };\n  inputReset = () => this.setState({ name: '', number: '' });\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleOnSubmit}>\n        <h2>Name</h2>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <h2>Number</h2>\n        <input\n          className=\"input-number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={this.handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <br />\n        <button type=\"submit\" className=\"input-button\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nexport default function Filter({ filter, handleFilterChange }) {\n  return (\n    <>\n      <h2>Filter</h2>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  handleFilterChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nexport default function ContactList({ contacts, deleteContact }) {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li className=\"list\" id={contact.id} key={contact.id}>\n          <span>{contact.name}</span> {contact.number}\n          <button\n            type=\"button\"\n            style={{ marginLeft: 20 }}\n            onClick={() => deleteContact(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  deleteContact: PropTypes.func,\n};\n","import './App.css';\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport testData from './data.json';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [...testData],\n    filter: '',\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    const filteredList = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n    return filteredList;\n  };\n\n  handleFilterChange = e => {\n    const { value } = e.currentTarget;\n    this.setState({ filter: value });\n  };\n\n  handleOnFormSubmit = data => {\n    const { name, number } = data;\n    const { contacts } = this.state;\n    if (\n      contacts.find(\n        contact => name.toLowerCase() === contact.name.toLowerCase(),\n      )\n    ) {\n      alert(name + ' is already in contacts');\n      return;\n    }\n\n    this.setState(prevState => {\n      return {\n        contacts: [\n          { name: name, id: uuidv4(), number: number },\n          ...prevState.contacts,\n        ],\n      };\n    });\n  };\n\n  deleteContact = id => {\n    const { contacts } = this.state;\n    const contactForDelete = contacts.filter(contact => contact.id !== id);\n    this.setState({ contacts: [...contactForDelete] });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div className=\"main-wraper\">\n        <h1>Phonebook</h1>\n        <ContactForm handleOnFormSubmit={this.handleOnFormSubmit} />\n\n        <h2>Contacts</h2>\n        <Filter\n          contacts={contacts}\n          filter={filter}\n          handleFilterChange={this.handleFilterChange}\n        />\n        <ContactList\n          contacts={this.getFilteredContacts()}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}